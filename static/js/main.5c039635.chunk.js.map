{"version":3,"sources":["components/layout/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","response","data","value","this","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","style","cursor","onClick","float","bind","marginRight","Contacts","Fragment","key","TextInputGroup","lable","placeholder","changeHandler","htmlFor","onChange","required","AddContact","inputChangeHandler","e","target","onSubmitHandler","preventDefault","newContact","post","history","push","onSubmit","EditContact","updateContact","match","params","put","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c039635.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nconst Header = (props) => {\n    const {branding} = props;\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\n                <div className=\"container\">\n                    <a className=\"navbar-brand\" href=\"/\">{branding}</a>\n\n                    <div className=\"navbar-collapse\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/\">\n                                    <i className=\"fas fa-home\"></i> Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/contact/add\" className=\"nav-link\">\n                                    <i className=\"fas fa-plus\"></i> Add Contact</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    debugger;\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(\n                    contact =>\n                        contact.id === action.payload.id ? (contact = action.payload) : contact\n                )\n            };\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n\n    state = {\n        contacts: [],\n        dispatch: action =>\n            this.setState(state => reducer(state, action))\n    };\n\n    componentDidMount() {\n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                this.setState({contacts: response.data})\n            })\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Consumer} from \"../../Context\";\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Contact extends React.Component {\n\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            const response = await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        } catch (e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n    };\n\n    render() {\n        const {id, name, email, phone} = this.props.contact;\n        const {showContactInfo} = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name}\n                                <i className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}\n                                   onClick={() => {\n                                       this.setState({showContactInfo: !this.state.showContactInfo})\n                                   }}></i>\n                                <i className=\"fas fa-times text-danger\" style={{float: 'right', cursor: 'pointer'}}\n                                   onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n                                <Link to={`/contact/edit/${id}`}>\n                                    <i className=\"fas fa-pencil-alt\"\n                                       style={{float: 'right', marginRight: '1rem', cursor: 'pointer'}}></i>\n                                </Link>\n                            </h4>\n                            {showContactInfo ?\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Email: {email}</li>\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\n                                </ul>\n                                : null\n                            }\n\n                        </div>\n                    )\n                }}\n\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React from 'react';\nimport Contact from \"./Contact\";\nimport {Consumer} from \"../../Context\";\n\nclass Contacts extends React.Component {\n\n    render() {\n\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n                            {contacts.map(contact => (\n                                <Contact key={contact.id} contact={contact}/>\n                            ))}\n                        </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const TextInputGroup = ({lable, type, name, value, placeholder, changeHandler}) => {\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{lable}</label>\n            <input type={type} name={name} value={value} onChange={changeHandler}\n                   className=\"form-control\"\n                   placeholder={placeholder} required/>\n        </div>\n    )\n};\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    lable: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    changeHandler: PropTypes.func.isRequired\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n","import React, {Component} from \"react\";\nimport {Consumer} from '../../Context';\nimport uuid from 'uuid';\nimport {TextInputGroup} from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: ''\n    };\n\n    inputChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    onSubmitHandler = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state;\n\n        const newContact = {name, email, phone};\n\n        const response = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n        dispatch({type: 'ADD_CONTACT', payload: response.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: ''\n        });\n\n        this.props.history.push('/');\n\n    };\n\n    render() {\n        const {name, email, phone} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Add Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)}>\n                                    <TextInputGroup lable={'Name'} name={'name'} placeholder={'Enter Name'}\n                                                    value={name} changeHandler={this.inputChangeHandler}/>\n\n                                    <TextInputGroup lable={'Email'} type={'email'} name={'email'}\n                                                    placeholder={'Enter Email'}\n                                                    value={email} changeHandler={this.inputChangeHandler}/>\n\n\n                                    <TextInputGroup lable={'Phone'} name={'phone'} placeholder={'Enter Phone'}\n                                                    value={phone} changeHandler={this.inputChangeHandler}/>\n\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Add Contact</button>\n                                </form>\n                            </div>\n\n                        </div>\n                    );\n\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;\n","import React, {Component} from \"react\";\nimport {Consumer} from '../../Context';\nimport uuid from 'uuid';\nimport {TextInputGroup} from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: ''\n    };\n\n    async componentDidMount() {\n        debugger;\n        const {id} = this.props.match.params;\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = response.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    inputChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    onSubmitHandler = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state;\n\n        const updateContact = {name, email, phone};\n\n        const {id} = this.props.match.params;\n\n        const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: response.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: ''\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n        const {name, email, phone} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Edit Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)}>\n                                    <TextInputGroup lable={'Name'} name={'name'} placeholder={'Enter Name'}\n                                                    value={name} changeHandler={this.inputChangeHandler}/>\n\n                                    <TextInputGroup lable={'Email'} type={'email'} name={'email'}\n                                                    placeholder={'Enter Email'}\n                                                    value={email} changeHandler={this.inputChangeHandler}/>\n\n\n                                    <TextInputGroup lable={'Phone'} name={'phone'} placeholder={'Enter Phone'}\n                                                    value={phone} changeHandler={this.inputChangeHandler}/>\n\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Update Contact</button>\n                                </form>\n                            </div>\n\n                        </div>\n                    );\n\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, requested page does not exist</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport {Provider} from './Context';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from \"./components/pages/NotFound\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\"/>\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts}/>\n                                <Route exact path=\"/contact/add\" component={AddContact}/>\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                                <Route component={NotFound}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}